@model ASI.Basecode.Services.ServiceModels.UserTicketsViewModel

@{
    ViewData["Title"] = "Tickets";
}

@section styles {
    <link rel="stylesheet" href="~/css/user_tickets.css" />
}

<div id="container">
    <header>
        <div class="logo">
            <img src="~/img/alliancedesk-logo.png" style="width: 185px;" alt="logo" onclick="window.location.href = '@Url.Action("Index", "Home")';">
        </div>

        <div class="header-buttons">
            <button type="button" class="btn button" data-bs-toggle="modal" data-bs-target="#createTicket"><i class='bx bx-plus-circle bx-xs bx-fw uh' style="align-self:center;"></i> Create Ticket </button>
            <a asp-action="Index" asp-controller="Notification"><i class='bx bx-bell bx-sm icon' style="color: #45474B; cursor: pointer;"></i></a>
            <i class='bx bx-cog bx-sm icon' style="color: #45474B; cursor: pointer;" data-bs-toggle="modal" data-bs-target="#settings"></i>

            <a class="profile" href="#">
                <img src="~/img/profile-logo.png" class="dpicn hover-pointer" alt="dp">
            </a>

            <ul class="dropdown" id="dropdownMenu">
                <li>

                    <a class="dropdown-item" href="#"><i class="bx bx-user bx-xs bx-fw" style="color: #3D3B40;"></i> Profile</a>
                </li>
                <li>

                    <a class="dropdown-item" asp-action="SignOutUser" asp-controller="Account"><i class="bx bx-log-out bx-xs bx-fw" style="color: #3D3B40;"></i> Logout</a>
                </li>
            </ul>
        </div>
    </header>

    <nav>
        <div id="buttonContainer">

            <a asp-action="Tickets"
               class="btn btn-primary @(Model.CurrentStatus == "All" ? "activeButton" : "inactiveButton")">
                All
            </a>

            @foreach (var status in Model.Statuses)
            {
                <a asp-action="Tickets" asp-route-status="@status.Key" class="btn btn-primary @(status.Value == Model.CurrentStatus ? "activeButton" : "inactiveButton")" >@status.Value</a>
            }
        </div>
    
        <div class="flex-Row gap-2 justify-content-center align-center">
            <div class="j-search-container | flex-Row align-center justify-content-center">
                <div class="input-group">
                    <input class="bg-transparent search-input" type="text" placeholder="Search" id="searchTerm" value="@Model.CurrentSearchTerm" />
                </div>
            </div>
        </div>

        <select class="form-select nav-select" id="floatingSelect" aria-label="Floating label select example">
            <option selected>Date</option>
            <option value="1">Category</option>
        </select>
    </nav>

    <main>
        @if (Model.Tickets != null && Model.Tickets.Any())
        {
            <div id="card_content">
                @foreach (var item in Model.Tickets)
                {
                    {
                        var ticketOptions = new List<dynamic>();

                        if (item.Status == "Open" || item.Status == "Assigned")
                        {
                            ticketOptions.Add(new
                            {
                                Text = "Edit",
                                IconClass = "bx bx-edit bx-xs bx-fw",
                                TargetModal = "#editTicket",
                                Action = "userEdit"
                            });
                            ticketOptions.Add(new
							{
								Text = "Delete",
                                IconClass = "bx bx-trash bx-xs bx-fw",
								TargetModal = "#deleteTicket",
								Action = "userDelete"
							});
						}
                        else if (item.Status == "Resolved")
						{
							ticketOptions.Add(new
							{
								Text = "Reopen",
                                IconClass = "bx bx-show bx-xs bx-fw",
								TargetModal = "#reopenTicket",
                                Action = "userReopen"
							});

                            ticketOptions.Add(new
                            {
                                Text = "Close",
                                IconClass = "bx bx-check bx-xs bx-fw",
                                TargetModal = "#deleteTicket ",
                                Action = "userClose"
                            });
						}

						<div class="ticket-container">
                            <a href="#" data-bs-toggle="modal" data-bs-target="#viewTicket"
                               class="ticket-link"
                               data-creator-name="@item.CreatorName"
                               data-date-created="@item.DateCreated"
                               data-title="@item.Title"
                               data-description="@item.Description"
                               data-latest-update="@(item.LatestUpdate.Message)"
                               data-latest-update-date="@(item.LatestUpdate.ModifiedAt)">
                                <div class="top-container">
                                    @*  <img class="image" src="@item.Image" alt="image"> *@
                                    <div class="nameDateContainer">

                                        <h5 class="name">
                                            @item.CreatorName
                                        </h5>
                                        <p class="date">@item.RelativeTime</p>
                                    </div>
                                </div>
                                <h2 class="question">@item.Title</h2>
                                <p class="details">@item.Description</p>
                            </a>
                            <div class="btn-group option">
                                <button class="btn icon-button" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bx bx-dots-vertical-rounded bx-sm icon-ticket" style="color: #808080;"></i>
                                </button>
                                <ul class="dropdown-menu menu">
                                    @foreach (var option in ticketOptions)
                                    {
                                        <li>
                                            <a class="dropdown-item item" href="#"
                                               data-bs-toggle="modal"
                                               data-bs-target="@option.TargetModal"
                                               onclick="@(option.Action != null ? $"javascript:{option.Action}('{item.TicketId}');" : null)">
                                                <i class="@option.IconClass" style="color: #808080;"></i>
                                                @option.Text
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
						
                }

                <div class="pagination-controls">
                    @if (Model.TotalPages > 1)
                    {
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = 1, status = Model.CurrentStatus })">&lt;&lt;</a>
                                </li>
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = Model.CurrentPage - 1, status = Model.CurrentStatus })">&lt;</a>
                                </li>

                                <li class="page-item @(Model.CurrentPage == 1 ? "active" : "")">
                                    <span class="page-link">@Model.CurrentPage</span>
                                </li>

                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = Model.CurrentPage + 1, status = Model.CurrentStatus })">&gt;</a>
                                </li>
                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = Model.TotalPages, status = Model.CurrentStatus })">&gt;&gt;</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            </div>
        }
        else
        {
            <h1 class="d-flex justify-content-center align-items-center h-75">No tickets found</h1>
        }


        <div class="modal fade" id="createTicket" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content p-3">
                    <div id="main_createcard">

                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>New Ticket</h3>
                            <button type="button" class="btn" data-bs-dismiss="modal"><i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i></button>
                        </div>

                        <form asp-controller="User" asp-action="TicketCreate" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group mb-3">
                                <input asp-for="Ticket.Title" class="form-control" placeholder="Ticket Title" aria-label="Title" />
                                <span asp-validation-for="Ticket.Title" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <select asp-for="Ticket.CategoryId" class="form-select" asp-items="ViewBag.Categories" id="inputGroupSelect04" aria-label="Category Options"></select>                                
                                <span asp-validation-for="Ticket.CategoryId" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <select asp-for="Ticket.PriorityId" class="form-select" asp-items="ViewBag.Priorities" id="inputGroupSelect04" aria-label="Priority Options"></select>
                                <span asp-validation-for="Ticket.PriorityId" class="text-danger"></span>
                            </div>

                            <textarea asp-for="Ticket.Description" class="form-control mb-3" id="largeTextField" rows="10" cols="50" placeholder="Description"></textarea>
                            <span asp-validation-for="Ticket.Description" class="text-danger"></span>

                            <div class="button_card mb-3 d-flex justify-content-between">
                                <button type="button" class="btn attachment custom-button" style="background-color: #7E7E7E; color: white;"><i class='bx bx-image-add bx-xs bx-fw uh' style="align-self:center;"></i> Add Attachment </button>
                                <button type="submit" class="btn attachment custom-button" style="background-color: #E21818; color: white;"><i class='bx bxl-telegram bx-xs bx-fw uh' style="align-self:center;"></i> Submit </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="editTicket" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content p-3">
                    <div id="main_editcard">

                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>Edit Ticket</h3>
                            <button type="button" class="btn" data-bs-dismiss="modal"><i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i></button>
                        </div>

                        <form asp-action="TicketEdit" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="Ticket.TicketId" />

                            <div class="form-group mb-3">
                                <input asp-for="Ticket.Title" class="form-control" placeholder="Ticket Title" aria-label="Title" />
                                <span asp-validation-for="Ticket.Title" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <select asp-for="Ticket.CategoryId" class="form-select mb-3"
                                        asp-items="@(new SelectList(Model.Categories, "Key", "Value"))"
                                        aria-label="Category Options">
                                </select>
                                <span asp-validation-for="Ticket.CategoryId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <select asp-for="Ticket.PriorityId" class="form-select mb-3"
                                        asp-items="@(new SelectList(Model.Priorities, "Key", "Value"))"
                                        aria-label="Priority Options">
                                </select>
                                <span asp-validation-for="Ticket.PriorityId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <textarea asp-for="Ticket.Description" class="form-control mb-3" rows="10" cols="50" placeholder="Description"></textarea>
								<span asp-validation-for="Ticket.Description" class="text-danger"></span>
                            </div>

                            <div class="button_card mb-3 d-flex justify-content-between">
                                <button type="button" class="btn attachment custom-button" style="background-color: #7E7E7E; color: white;"><i class='bx bx-image-add bx-xs bx-fw uh' style="align-self:center;"></i> Add Attachment </button>
                                <button type="submit" class="btn attachment custom-button" style="background-color: #E21818; color: white;"><i class='bx bxl-telegram bx-xs bx-fw uh' style="align-self:center;"></i> Submit </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="viewTicket" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="ticket-modal1">
                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>View Ticket</h3>
                            <button type="button" class="btn closebtn1" data-bs-dismiss="modal"><i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i></button>
                        </div>

                        <div class="top-container">
                            <img class="image" src="/img/profile-logo.png" alt="image">
                            <div class="nameDateContainer">
                                <h5 class="name"></h5>
                                <p class="date"></p>
                            </div>
                        </div>
                        <h2 class="question"></h2>
                        <p class="details"></p>
                    </div>

                    <div class="status-container">
                        <div class="status1"></div>
                        <div class="statusdate"></div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="modal fade" id="deleteTicket" tabindex="-1" aria-labelledby="deleteTicketLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content p-3">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteTicketLabel">Delete Ticket</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this ticket?</p>
                    </div>
                    <div class="modal-footer">
                        <form id="deleteTicketForm" method="post">
                            <input type="hidden" name="TicketId" id="deleteTicketId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id ="closeTicket" tabindex="-1" aria-labelledby="closeTicketLabel" aria-hiddent="true">
            <div class="modal-dialog modal-dialog-centered">
				<div class="modal-content p-3">
					<div class="modal-header">
						<h5 class="modal-title" id="closeTicketLabel">Close Ticket</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this ticket?</p>
                    </div>
                    <div class="modal-footer">
                        <form id="closeTicketForm" method="post">
                            <input type="hidden" name="TicketId" id="closeTicketId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @Html.Partial("SettingsModal")

    </main>

    <div id="sidebar">

        <div id="search-container">
            <i class='bx bx-search'></i>
            <input type="text" id="search-input" placeholder="Search Tickets">
        </div>

        <div id="button-container">
            <i class='bx bx-list-ul'></i>
            <span class="label-1">Tickets</span>
        </div>
        

        <div id="instruction-container">

            <div class="instruction-label" data-bs-toggle="modal" data-bs-target="#knowledge">
                <i class='bx bx-star'></i>
                <span class="label-2">Articles</span>
            </div>

            <hr />

            <div class="instruction-detail">
                <ul>
                    <li>&#8226; Click the 'Create Ticket'</li>
                    <li>&#8226; Enter the necessary details</li>
                    <li>&#8226; Submit if done</li>
                </ul>
            </div>

            <div class="instruction-label">
                <i class='bx bx-link'></i>
                <span class="label-2">Contacts</span>
            </div>

            <hr />

            <div class="instruction-detail">
                <ul>
                    <li>&#8226; abellalance2@gmail.com</li>
                    <li>&#8226; jethrocenas@gmail.com</li>
                    <li>&#8226; rehamdee.camama@g.msuiit.edu.ph</li>
                </ul>
            </div>

        </div>

    </div>

    @Html.Partial("KnowledgeBaseModal")

</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {


        var createTicketModal = document.getElementById('createTicket');
        createTicketModal.addEventListener('show.bs.modal', function (event));

        const ticketLinks = document.querySelectorAll('.ticket-link');

        ticketLinks.forEach(link => {
			link.addEventListener('click', function (event) {
				var modal = document.querySelector('#viewTicket');
				var creatorName = link.getAttribute('data-creator-name');
				var dateCreated = link.getAttribute('data-date-created');
				var title = link.getAttribute('data-title');
				var description = link.getAttribute('data-description');
                var latestUpdate = link.getAttribute('data-latest-update');
                var latestUpdateDate = link.getAttribute('data-latest-update-date');

				modal.querySelector('.name').textContent = creatorName;
				modal.querySelector('.date').textContent = dateCreated;
				modal.querySelector('.question').textContent = title;
				modal.querySelector('.details').textContent = description;
                modal.querySelector('.status1').textContent = latestUpdate;
                modal.querySelector('.statusdate').textContent = latestUpdateDate;

         	});
		});

        var dpIcon = document.querySelector('.dpicn');
        var dropdownMenu = document.getElementById('dropdownMenu');

        dpIcon.addEventListener('click', function (event) {
            event.stopPropagation();

            if (dropdownMenu.style.display === 'block') {
                dropdownMenu.style.display = 'none';
            } else {
                dropdownMenu.style.display = 'block';
            }
        });

        document.getElementById('searchTerm').addEventListener('keypress', function (event) {
            if (event.keyCode === 13) {
                event.preventDefault(); // Prevent form submission

                var searchTerm = this.value;
                var status = '@Model.CurrentStatus';
                var url = '@Url.Action("Tickets")';

                // Construct the URL with the appropriate parameters
                if (status !== 'All') {
                    url += '?status=' + encodeURIComponent(status);
                }

                if (searchTerm) {
                    url += (url.indexOf('?') === -1 ? '?' : '&') + 'searchTerm=' + encodeURIComponent(searchTerm);
                }
                
                location.replace(url);
            }
        });

        function userEdit(ticketId) {
            var modal = document.querySelector('#editTicket');

            // Fetch ticket details via AJAX
            fetch(`/User/Tickets/${ticketId}/Edit`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Fetched data:', data);

                    // Populate modal fields with fetched data
                    modal.querySelector('#Ticket_TicketId').value = data.id;
                    modal.querySelector('#Ticket_Title').value = data.title;
                    modal.querySelector('#Ticket_CategoryId').value = data.categoryId;
                    modal.querySelector('#Ticket_PriorityId').value = data.priorityId;
                    modal.querySelector('#Ticket_Description').value = data.description;
                    modal.querySelector('form').action = `/User/Tickets/${ticketId}/Edit`;

                    // Show the modal after data is loaded
                    var modalInstance = new bootstrap.Modal(modal);
                    modalInstance.show();

                    // Ensure modal dismisses properly
                    modal.querySelector('.btn[data-bs-dismiss="modal"]').addEventListener('click', function () {
                        modalInstance.hide();
                    });

                    // Handle backdrop click to dismiss modal
                    modal.addEventListener('hidden.bs.modal', function () {
                        // Clear form fields or do any necessary cleanup
                        modal.querySelector('#Ticket_TicketId').value = '';
                        modal.querySelector('#Ticket_Title').value = '';
                        modal.querySelector('#Ticket_CategoryId').value = '';
                        modal.querySelector('#Ticket_PriorityId').value = '';
                        modal.querySelector('#Ticket_Description').value = '';
                    });
                })
                .catch(error => console.error('Error fetching or parsing data:', error));
        }
        function userDelete(ticketId) {
            var form = document.querySelector('#deleteTicketForm');
            form.action = `/User/Tickets/${ticketId}/Delete`;
            form.querySelector('#deleteTicketId').value = ticketId;
            var modalInstance = new bootstrap.Modal(document.querySelector('#deleteTicket'));
            modalInstance.show();
        }
    });
</script>
