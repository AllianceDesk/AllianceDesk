@model ASI.Basecode.Services.ServiceModels.UserTicketsViewModel

@{
    ViewData["Title"] = "Tickets";
}

@section styles {
    <link rel="stylesheet" href="~/css/user_tickets.css" />
}

<div id="container">
    <header>
        <div class="logo">
            <img src="~/img/alliancedesk-logo.png" style="width: 185px;" alt="logo" onclick="window.location.href = '@Url.Action("Index", "Home")';">
        </div>

        <div class="header-buttons">
            <button type="button" class="btn button" data-bs-toggle="modal" data-bs-target="#createTicket"><i class='bx bx-plus-circle bx-xs bx-fw header_button_icon'></i> Create Ticket </button>
            <a asp-action="Index" asp-controller="Notification" class="bell_icon"><i class='bx bx-bell bx-sm header_icon'></i></a>            
            <i class='bx bx-cog bx-sm header_icon' data-bs-toggle="modal" data-bs-target="#settings"></i>
                        

            <a class="profile" href="#">
                <img src="~/img/profile-logo.png" class="dpicn hover-pointer" alt="dp">
            </a>

            <ul class="dropdown" id="dropdownMenu">
                <li>

                    <a class="dropdown-item" href="#"><i class="bx bx-user bx-xs bx-fw" style="color: #3D3B40;"></i> Profile</a>
                </li>
                <li>

                    <a class="dropdown-item" asp-action="SignOutUser" asp-controller="Account"><i class="bx bx-log-out bx-xs bx-fw" style="color: #3D3B40;"></i> Logout</a>
                </li>
            </ul>
        </div>
    </header>

    <nav>
        <div id="buttonContainer">
            @foreach (var status in Model.Statuses)
            {
                <a asp-action="Tickets" asp-route-status=@status.Key class="btn btn-primary @(status.Key == Model.CurrentStatus.ToString() ? "activeButton" : "inactiveButton")">@status.Value</a>
            }
        </div> 

        <select class="form-select nav-select" id="floatingSelect" aria-label="Floating label select example">
            <option selected>Date</option>
            <option value="1">Category</option>
        </select>
    </nav>

    <main>
        @if (Model.Tickets != null && Model.Tickets.Any())
        {
            <div id="card_content">
                @foreach (var item in Model.Tickets)
                {
					<div class="ticket-container">
						<a href="#" class="ticket-link" data-bs-toggle="modal" data-bs-target="#viewTicket" data-ticket-id="@item.TicketId">
                            <div class="top-container">
								<div class="nameDateContainer">

									<h5 class="name">
										@item.CreatorName
									</h5>
									<p class="date">@item.RelativeTime</p>
								</div>
							</div>
							<h2 class="question">@item.Title</h2>
							<p class="details">@item.Description</p>
							@if (item.AgentName != "Unknown")
							{
								<div class="agent-container">
									<div class="agent-name-date-container">
										<h5 class="agent-name">@item.AgentName</h5>
									</div>
									<div class="assign-agent">Assigned agent</div>
								</div>
							}
							@if (item.Status == "Closed")
							{
								if(item.Feedback == null)
								{
									<button class="btn feedback" type="button" data-bs-toggle="modal" data-bs-target="#fillFeedback" data-ticket-id="@item.TicketId">
										<i class="bx bx-user-voice bx-xs bx-fw feedbackIcon"></i>
										Feedback
									</button>
								}
								else
								{
									<p>Feedback Rating: @item.Feedback.Rating</p>
									<p>Feedback Comments: @item.Feedback.Comments</p>
								}
							}
						</a>
						<div class="btn-group option">  

							@if (item.Status == "Open" || item.Status == "Assigned")
							{
								<button class="btn icon-button" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
									<i class="bx bx-dots-vertical-rounded bx-sm icon-ticket" style="color: #808080;"></i>
								</button>
								<ul class="dropdown-menu menu">
									<li>
										<a class="dropdown-item item" href="#" data-bs-toggle="modal" data-bs-target="#editTicket" data-ticket-id="@item.TicketId">
											<i class="bx bx-edit bx-xs bx-fw" style="color: #808080;"></i>
											Edit
										</a>
									</li>
									<li>
										<a class="dropdown-item item" href="#" data-bs-toggle="modal" data-bs-target="#deleteTicket" data-ticket-id="@item.TicketId">
											<i class="bx bx-trash bx-xs bx-fw" style="color: #808080;"></i>
											Delete
										</a>
									</li>
								</ul>
							}
							else if (item.Status == "Resolved")
							{
								<button class="btn icon-button" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
									<i class="bx bx-dots-vertical-rounded bx-sm icon-ticket" style="color: #808080;"></i>
								</button>
								<ul class="dropdown-menu menu">
									<li>
										<a class="dropdown-item item" href="#" data-bs-toggle="modal" data-bs-target="#ticketActionModal" data-action-type="reopen" data-ticket-id="@item.TicketId">
											<i class="bx bx-show bx-xs bx-fw" style="color: #808080;"></i>
											Reopen
										</a>
									</li>
									<li>
										<a class="dropdown-item item" href="#" data-bs-toggle="modal" data-bs-target="#ticketActionModal" data-action-type="close" data-ticket-id="@item.TicketId">
											<i class="bx bx-check bx-xs bx-fw" style="color: #808080;"></i>
											Close
										</a>
									</li>
								</ul>
							}
						</div>
					</div>
                }

                <div class="pagination-controls">
                    @if (Model.TotalPages > 1)
                    {
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = 1, status = Model.CurrentStatus })">&lt;&lt;</a>
                                </li>
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = Model.CurrentPage - 1, status = Model.CurrentStatus })">&lt;</a>
                                </li>

                                <li class="page-item active">
                                    <span class="page-link">@Model.CurrentPage</span>
                                </li>

                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = Model.CurrentPage + 1, status = Model.CurrentStatus })">&gt;</a>
                                </li>
                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("Tickets", new { page = Model.TotalPages, status = Model.CurrentStatus })">&gt;&gt;</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            </div>
        }
        else
        {
            <h1 class="d-flex justify-content-center align-items-center h-75">No tickets found</h1>
        }

        <div class="modal fade" id="createTicket" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content p-3">
                    <div id="main_createcard">
                        <div class="top_modal d-flex justify-content-between align-items-center mb-3 pl-2">
                            <h3>New Ticket</h3>
                            <button type="button" class="btn x_button" data-bs-dismiss="modal"><i class='bx bx-x bx-sm x_icon'></i></button>
                        </div>
                        
                        <form asp-controller="User" asp-action="TicketCreate" method="post" enctype="multipart/form-data">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-floating mb-3">
                                <input asp-for="Ticket.Title" type="text" class="form-control" id="floatingInput" placeholder="Ticket Title">
                                <span asp-validation-for="Ticket.Title" class="text-danger"></span>
                                <label for="floatingInput">Ticket Title</label>
                            </div>

                            <div class="form-floating mb-3">
                                <select asp-for="Ticket.CategoryId" class="form-select" id="floatingSelect1" aria-label="Category Options">
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.Key">@category.Value</option>
                                    }
                                </select>
                                <span asp-validation-for="Ticket.CategoryId" class="text-danger"></span>
                                <label for="floatingSelect1">Category Options</label>
                            </div>

                            <div class="form-floating mb-3">
                                <select asp-for="Ticket.PriorityId" class="form-select" id="floatingSelect2" aria-label="Priority Options">
                                    @foreach (var priority in Model.Priorities)
                                    {
                                        <option value="@priority.Key">@priority.Value</option>
                                    }
                                </select>
                                <span asp-validation-for="Ticket.PriorityId" class="text-danger"></span>
                                <label for="floatingSelect2">Priority Options</label>
                            </div>

                            <div class="form-floating mb-3">
                                <textarea asp-for="Ticket.Description" class="form-control" placeholder="Description" id="floatingTextarea2" style="height: 100px"></textarea>
                                <span asp-validation-for="Ticket.Description" class="text-danger"></span>
                                <label for="floatingTextarea2">Description</label>
                            </div>

                            <div class="d-flex pr-3">

                                <div class="form-group">
                                    <input type="file" asp-for="Ticket.AttachmentFiles" class="btn  file_button" multiple accept="image/*" />
                                    <span asp-validation-for="Ticket.AttachmentFiles" class="text-danger"></span>
                                </div>

                                <button type="submit" class="btn button button_size">
                                    Submit
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="modal fade" id="editTicket" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content p-3">
                    <div id="main_editcard">
                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>Edit Ticket</h3>
                            <button type="button" class="btn" data-bs-dismiss="modal">
                                <i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i>
                            </button>
                        </div>

                        <form id="editTicketForm" asp-action="TicketEdit" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="Ticket.TicketId" id="Ticket_TicketId" />
                            <div class="form-group mb-3">
                                <input asp-for="Ticket.Title" class="form-control" placeholder="Ticket Title" aria-label="Title" id="Edit_Ticket_Title" />
                                <span asp-validation-for="Ticket.Title" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <select asp-for="Ticket.CategoryId" class="form-select" aria-label="Category Options"
                                        asp-items="@(new SelectList(Model.Categories, "Key", "Value"))">
                                </select>
                                <span asp-validation-for="Ticket.CategoryId" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <select asp-for="Ticket.PriorityId" class="form-select" aria-label="Priority Options"
                                        asp-items="@(new SelectList(Model.Priorities, "Key", "Value"))">
                                </select>
                                <span asp-validation-for="Ticket.PriorityId" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <textarea asp-for="Ticket.Description" class="form-control" rows="10" placeholder="Description"></textarea>
                                <span asp-validation-for="Ticket.Description" class="text-danger"></span>
                            </div>
                            <div class="button_card d-flex justify-content-between">
                                <button type="button" class="btn attachment custom-button" style="background-color: #7E7E7E; color: white;">
                                    <i class='bx bx-image-add bx-xs bx-fw uh' style="align-self:center;"></i> Add Attachment
                                </button>
                                <button type="submit" class="btn attachment custom-button" style="background-color: #E21818; color: white;">
                                    <i class='bx bxl-telegram bx-xs bx-fw uh' style="align-self:center;"></i> Submit
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="viewTicket" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="ticket-modal1">
                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>View Ticket</h3>
                            <button type="button" class="btn closebtn1" data-bs-dismiss="modal"><i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i></button>
                        </div>

                        <div class="top-container">
                            <img class="image" src="/img/profile-logo.png" alt="image">
                            <div class="nameDateContainer">
                                <h5 class="name" id="ViewName">Name</h5>
                                <p class="date" id="ViewDate">Date</p>
                            </div>
                        </div>
                        <h2 class="question" id="ViewTitle">Title</h2>
                        <p class="details" id="ViewDetails">Details</p>
                    </div>

                    <div class="gallery" id="ViewGallery"></div>

                    <div class="status-container">
                        <div class="status" id="ViewStatus"></div>
                        <div class="statusdate" id="ViewStatusDate"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="deleteTicket" tabindex="-1" aria-labelledby="deleteTicketLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content p-3">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteTicketLabel">Delete Ticket</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this ticket?</p>
                    </div>
                    <div class="modal-footer">
                        <form id="deleteTicketForm" method="post">
                            <input type="hidden" name="TicketId" id="deleteTicketId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="ticketActionModal" tabindex="-1" aria-labelledby="ticketActionModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content p-3">
                    <div class="modal-header">
                        <h5 class="modal-title" id="ticketActionModalLabel">Ticket Action</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p id="modalMessage">Are you sure you want to perform this action?</p>
                    </div>
                    <div class="modal-footer">
                        <form id="ticketActionForm" method="post">
                            <input type="hidden" name="TicketId" id="ticketActionId" />
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-danger" id="ticketActionButton">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="fillFeedback" tabindex="-1" aria-labelledby="feedbackLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content p-3">
                    <div id="main_card">

                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>Feedback</h3>
                            <button type="button" class="btn" data-bs-dismiss="modal"><i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i></button>
                        </div>

                        <form id="fillFeedbackForm" asp-action="FeedbackAdd" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="Feedback.TicketId" id="Feedback_TicketId" />
                            <div class="form-group mb-3">
                                <textarea asp-for="Feedback.Comments" class="form-control" rows="10" placeholder="Description"></textarea>
                                <span asp-validation-for="Feedback.Comments" class="text-danger"></span>
                            </div>

                            <input type="hidden" asp-for="Feedback.Rating" id="Rating" />
                            <div class="rating mb-3 d-flex">
                                <div class="d-flex flex-column mx-2">
                                    <input type="radio" asp-for="Feedback.Rating" id="star5" name="Rating" value="5" />
                                    <label for="star5" title="5 stars">5</label>
                                </div>
                                <div class="d-flex flex-column mx-2">
                                    <input type="radio" id="star4" name="Rating" value="4" />
                                    <label for="star4" title="4 stars">4</label>
                                </div>
                                <div class="d-flex flex-column mx-2">
                                    <input type="radio" id="star3" name="Rating" value="3" />
                                    <label for="star3" title="3 stars">3</label>
                                </div>
                                <div class="d-flex flex-column mx-2">
                                    <input type="radio" id="star2" name="Rating" value="2" />
                                    <label for="star2" title="2 stars">2</label>
                                </div>
                                <div class="d-flex flex-column mx-2">
                                    <input type="radio" id="star1" name="Rating" value="1" />
                                    <label for="star1" title="1 star">1</label>
                                </div>
                            </div>
                            <div class="button_card mb-3 d-flex justify-content-between">
                                <button type="submit" class="btn attachment custom-button" style="background-color: #E21818; color: white;">
                                    <i class='bx bxl-telegram bx-xs bx-fw uh' style="align-self:center;"></i> 
                                    Submit
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @Html.Partial("SettingsModal")

    </main>

    <div id="sidebar">

        <div id="search-container">
            <i class='bx bx-search'></i>
            <input type="text" id="search-input" placeholder="Search Tickets" value="@Model.CurrentSearchTerm">
        </div>

        <div id="button-container">
            <i class='bx bx-list-ul'></i>
            <span class="label-1">Tickets</span>
        </div>


        <div id="instruction-container">

            <div class="instruction-label" data-bs-toggle="modal" data-bs-target="#knowledge" id="knowledgeBase">
                <i class="fa-regular fa-newspaper"></i>
                <span class="label-2">Browse Articles</span>
            </div>

            <hr />

            <div class="instruction-label">
                <i class='bx bx-star'></i>
                <span class="label-2">Favorites</span>
            </div>

            <hr />

            <div class="instruction-detail">
                <ul>
                    @foreach(var article in Model.Favorites)
                    {
                        <li class="text-sm" data-article-detail-btn data-article-id="@article.ArticleId" data-bs-toggle="modal" data-bs-target="#detail">@article.Title</li>
                    }
                </ul>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="knowledge" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- The content for Create Article Modal will be loaded here-->
        </div>
    </div>
</div>

<div class="modal fade" id="detail" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <!-- The content for Article Detail Modal will be loaded here-->
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        
        const viewTicketModal = new bootstrap.Modal(document.getElementById('viewTicket'));
        const editTicketModal = new bootstrap.Modal(document.getElementById('editTicket'));
        const feedbackModal = new bootstrap.Modal(document.getElementById('fillFeedback'));
        const ticketActionModal = new bootstrap.Modal(document.getElementById('ticketActionModal')); 

        var dpIcon = document.querySelector('.dpicn');
        var dropdownMenu = document.getElementById('dropdownMenu');

        dpIcon.addEventListener('click', function (event) {
            event.stopPropagation();

            if (dropdownMenu.style.display === 'block') {
                dropdownMenu.style.display = 'none';
            } else {
                dropdownMenu.style.display = 'block';
            }
        });

        document.getElementById('search-input').addEventListener('keypress', function (event) {
            if (event.keyCode === 13) {
                event.preventDefault(); // Prevent form submission

                var searchTerm = this.value;
                var status = '@Model.CurrentStatus';
                var url = '@Url.Action("Tickets")';

                // Construct the URL with the appropriate parameters
                if (status !== 'All') {
                    url += '?status=' + encodeURIComponent(status);
                }

                if (searchTerm) {
                    url += (url.indexOf('?') === -1 ? '?' : '&') + 'searchTerm=' + encodeURIComponent(searchTerm);
                }

                location.replace(url);
            }
        });

        document.querySelectorAll('[data-bs-toggle="modal"]').forEach(element => {
            element.addEventListener('click', function () {
                const target = this.getAttribute('data-bs-target');
                
                if (target === '#editTicket') {
                    var ticketId = this.getAttribute('data-ticket-id');
                    document.querySelector('#editTicketForm').action = `/User/Tickets/${ticketId}/Edit`;

                    fetch(`/User/Tickets/${ticketId}/Edit`)
                        .then(response => response.json())
                        .then(data => {
                            document.querySelector('#Ticket_TicketId').value = data.ticketId;
                            document.querySelector('#Edit_Ticket_Title').value = data.title;
                            document.querySelector('#Ticket_CategoryId').value = data.categoryId;
                            document.querySelector('#Ticket_PriorityId').value = data.priorityId;
                            document.querySelector('#Ticket_Description').value = data.description;
                            editTicketModal.show();
                        })
                        .catch(error => console.error('Error fetching ticket data:', error));
                }
                else if (target === '#fillFeedback') {

                    var ticketId = this.getAttribute('data-ticket-id');
                    document.querySelector('#Feedback_TicketId').value = ticketId;
                    document.querySelector('#fillFeedbackForm').action = `/User/Tickets/${ticketId}/Feedback`;
                    feedbackModal.show();
                }
                else if (target === '#ticketActionModal') {
                    var actionType = this.getAttribute('data-action-type');
                    var ticketId = this.getAttribute('data-ticket-id');

                    var title = '';
                    var modalMessage = '';
                    var buttonText = '';
                    var formAction = '';

                    if (actionType === 'close') {
                        title = 'Close Ticket';
                        modalMessage = 'Are you sure you want to close this ticket?';
                        buttonText = 'Close';
                        formAction = `/User/Tickets/${ticketId}/Close`;
                    } else if (actionType === 'reopen') {
                        title = 'Reopen Ticket';
                        modalMessage = 'Are you sure you want to reopen this ticket?';
                        buttonText = 'Reopen';
                        formAction = `/User/Tickets/${ticketId}/Reopen`;
                    }

                    document.getElementById('ticketActionModalLabel').textContent = title;
                    document.getElementById('modalMessage').textContent = modalMessage;
                    document.getElementById('ticketActionButton').textContent = buttonText;
                    document.getElementById('ticketActionForm').action = formAction;
                }
                else if(target == '#viewTicket') {
                    var ticketId = this.getAttribute('data-ticket-id');

                    fetch(`/User/Tickets/${ticketId}`)
                        .then(response => response.json())
                        .then(data => {
                                       
                            console.log(data);
                            document.querySelector('#ViewName').textContent = data.user;
                            document.querySelector('#ViewDate').textContent = data.dateCreated;
                            document.querySelector('#ViewTitle').textContent = data.title;
                            document.querySelector('#ViewDetails').textContent = data.description;
                            document.querySelector('#ViewStatus').textContent = data.latestUpdate;
                            document.querySelector('#ViewStatusDate').textContent = data.latestUpdateDate;

                            const gallery = document.querySelector('#ViewGallery');
                            gallery.innerHTML = '';

                            data.files.forEach(image => {
                                const anchor = document.createElement('a');
                                anchor.href = image;
                                anchor.setAttribute('data-lightbox', 'ticket-gallery');
                                anchor.setAttribute('data-title', data.title);

                                const img = document.createElement('img');
                                img.src = image;
                                img.alt = data.title
                                img.classList.add('gallery-thumbnail');

                                anchor.appendChild(img);
                                gallery.appendChild(anchor);
                            });

                            viewTicketModal.show();

                        })
                        .catch(error => console.error('Error fetching ticket data:', error));
                } else {
                    const modal = new bootstrap.Modal(document.querySelector(target));
                    modal.show();
                }
            });
        });

        // Get all modal elements
        const modals = document.querySelectorAll('.modal');

        modals.forEach(modal => {
            // Find the close button within this specific modal
            const closeButton = modal.querySelector('[data-bs-dismiss="modal"]');

            if (closeButton) {
                closeButton.addEventListener('click', function () {
                    // Get the corresponding Bootstrap modal instance
                    const modalInstance = bootstrap.Modal.getInstance(modal);

                    if (modalInstance) {
                        modalInstance.hide(); // Hide the correct modal
                        // Manually remove backdrop if it still exists
                        const backdrop = document.querySelector('.modal-backdrop');
                        if (backdrop) {
                            backdrop.remove();
                        }
                    }
                });
            }
        });

        document.querySelectorAll('input[name="Rating"]').forEach((elem) => {
            elem.addEventListener("change", function () {
                document.getElementById("Rating").value = this.value;
            });
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        $(document).on('click', '[data-article-detail-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to fetch article details
            $.ajax({
                url: '/KnowledgeBase/Article-Detail',
                type: 'GET',
                data: { articleId: articleId },
                success: function (result) {
                    $('#detail .modal-content').html(result);
                    $('#detail').modal('show');
                    console.log('Article details successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        });

        var knowledgeBase = document.getElementById('knowledgeBase');
        knowledgeBase.addEventListener('click', function () {

            // Perform AJAX request to fetch article details
            $.ajax({
                url: '/KnowledgeBaseModal',
                type: 'GET',
                success: function (result) {
                    $('#knowledge .modal-content').html(result);
                    $('#knowledge').modal('show');
                    console.log('KnowledgeBase successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        });

        $(document).on('click', '[data-backToKBModal-btn]', function () {
            // Perform AJAX request to add to favorites
            $.ajax({
                url: 'Tickets',
                type: 'GET',
                success: function (result) {
                    // Refresh the article detail modal
                    loadKnowledgeBase();
                },
                error: function (error) {
                    console.error('Error adding article to favorites:', error);
                }
            });
        });

        // Function to load article details
        function loadKnowledgeBase() {
            // Perform AJAX request to fetch article details
            $.ajax({
                url: '/KnowledgeBaseModal',
                type: 'GET',
                success: function (result) {
                    $('#knowledge .modal-content').html(result);
                    $('#knowledge').modal('show');
                    console.log('KnowledgeBase successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        }

        $(document).on('click', '[data-article-addFavorites-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to add to favorites
            $.ajax({
                url: '/KnowledgeBase/Article-AddFavorite',
                type: 'POST',
                data: { articleId: articleId },
                success: function (result) {
                    // Refresh the article detail modal
                    loadArticleDetails(articleId);
                },
                error: function (error) {
                    console.error('Error adding article to favorites:', error);
                }
            });
        });

        $(document).on('click', '[data-article-removeFavorites-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to remove from favorites
            $.ajax({
                url: '/KnowledgeBase/Article-DeleteFavorite',
                type: 'POST',
                data: { articleId: articleId },
                success: function (result) {
                    // Refresh the article detail modal
                    loadArticleDetails(articleId);
                },
                error: function (error) {
                    console.error('Error removing article from favorites:', error);
                }
            });
        });

        // Function to load article details
        function loadArticleDetails(articleId) {
            $.ajax({
                url: '/KnowledgeBase/Article-Detail',
                type: 'GET',
                data: { articleId: articleId },
                success: function (result) {
                    $('#detail .modal-content').html(result);
                    $('#detail').modal('show');
                    console.log('Article details successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        }

    });
</script>