@{
    ViewData["Title"] = "Tickets";
    Layout = "_Layout";
}
@section styles {
    <link rel="stylesheet" href="~/css/functionalities.css" />
    <link rel="stylesheet" href="~/css/Admin.css" />
}

@Html.Partial("Admin_Header")
<div class="main">
    @Html.Partial("Admin_Sidebar")
    <div class="admin-body p-y-3 relative bg-grey">
        @* Status *@
        <p class="hidden" data-aom-open>5</p>
        <p class="hidden" data-aom-resolved>10</p>
        <p class="hidden" data-aom-inprogress>15</p>
        <p class="hidden" data-aom-closed>16</p>
        @* Category *@
        <p class="hidden" data-aom-technical>5</p>
        <p class="hidden" data-aom-billing>10</p>
        <p class="hidden" data-aom-generalInquiry>15</p>
        <p class="hidden" data-aom-others>16</p>
        @* TicketVolume *@
        <p class="hidden" data-tm-1star>5</p>
        <p class="hidden" data-tm-2star>10</p>
        <p class="hidden" data-tm-3star>15</p>
        <p class="hidden" data-tm-4star>12</p>
        <p class="hidden" data-tm-5star>16</p>
        <h2>Analytics</h2>
        <div class="view-user-nav">
            <div class="agent-nav pt-4">
                <ul class="flex-Row gap-2">
                    <a asp-action="AnalyticsOverallMetrics" asp-controller="Admin" class="nav-item  " data-ticketsall-nav-item data-status="unresolved">Overall Metrics</a>
                    <a asp-action="AnalyticsTeamMetric" asp-controller="Admin" class="nav-item " data-ticketsall-nav-item data-status="resolved">Team Metric</a>
                    <a asp-action="AgentMetric" asp-controller="Admin" class="nav-item active-admin-nav" data-ticketsall-nav-item data-status="resolved">Agent Metrics</a>
                </ul>
            </div>
           
        </div>
        
        <div class="agent-metrics | flex-Row justify-content-between gap-2 w-100">
            <div class="h-full">
                <div class="j-search-container | flex-Row align-center gap-2">
                    <i class="fa-solid fa-magnifying-glass text-1-5"></i>
                    <input id="team-search-input" class="bg-transparent" type="text" placeholder="Search" />
                </div>
                <div id="teams-list" class="h-100 flex flex-col gap-1 mt-4">
                    <!-- Teams will be dynamically inserted here -->
                </div>
                <div class="h-100 flex flex-col gap-1 mt-4">
                    <div class="flex-Row bg-White p-x-1 p-y-0-5 gap-1 align-items-center align-items-center">
                        <div class="p-y-1 p-x-1 br-50 bg-grey"></div>
                        <h6 class="H6">Username</h6>
                        <div class="role-container role-agent fw-semi text-0-5 text-sm">IT SUPPORT</div>
                    </div>
                    <div class="flex-Row bg-White  p-x-1 p-y-0-5 gap-1 align-items-center align-items-center">
                        <div class="p-y-1 p-x-1 br-50 bg-grey"></div>
                        <h6 class="H6">Username</h6>
                        <div class="role-container  role-agent fw-semi text-0-5 text-sm">IT SUPPORT</div>
                    </div>
                    <div class="flex-Row bg-White  p-x-1 p-y-0-5 gap-1 align-items-center align-items-center">
                        <div class="p-y-1 p-x-1 br-50 bg-grey"></div>
                        <h6 class="H6">Username</h6>
                        <div class="role-container role-agent fw-semi text-0-5 text-sm">IT SUPPORT</div>
                    </div>
                </div>
         
            </div>
            <div class="overflow-hidden flex flex-col gap-2 ">
            
                <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                    <canvas id="LineTicketVolumeMetric"></canvas>
                </div>
                <div class="bg-White p-x-0-5 p-y-0-5 br-1-5 h-100 flex flex-Row justify-content-between ">
                    <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                        <p class="text-center">Ticket Status</p>
                        <canvas id="pieChartStatus"></canvas>
                    </div>
                    <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                        <p class="text-center">Ticket Category</p>
                        <canvas id="pieChartCategory"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('LineTicketVolumeMetric').getContext('2d');

        const teams = [ 
            {
                id: "goku",
                userName: "goku",
                role: "IT SUPPORT",
                ticketVolume: {
                    total: 50,
                    star_1: 5,
                    star_2: 0,
                    star_3: 15,
                    star_4: 25,
                    star_5: 5,
                },
                ticketStatus: {
                    total: 50,
                    open: 5,
                    resolved: 10,
                    inProgress: 25,
                    closed: 15
                },
                ticketCategory: {
                    total: 50,
                    technical: 15,
                    billing: 25,
                    generalInquiry: 5,
                    others: 15,
                }
            },
            {
                id: "gon",
                userName: "gon",
                role: "IT SUPPORT",
                ticketVolume: {
                    total: 50,
                    star_1: 15,
                    star_2: 10,
                    star_3: 5,
                    star_4: 15,
                    star_5: 5,
                },
                ticketStatus: {
                    total: 50,
                    open: 7,
                    resolved: 20,
                    inProgress: 8,
                    closed: 15
                },
                ticketCategory: {
                    total: 50,
                    technical: 8,
                    billing: 20,
                    generalInquiry: 15,
                    others: 7,
                }
            }
        ]

        const teamsList = document.getElementById('teams-list');

        function renderTeams(teamsToRender) {
            teamsList.innerHTML = '';
            teamsToRender.forEach(team => {
                const teamDiv = document.createElement('div');
                teamDiv.classList.add('flex-Row', 'bg-White', 'justify-content-between', 'cursor-pointer', 'p-x-1', 'p-y-0-5', 'gap-1', 'align-items-center');
                teamDiv.dataset.teamId = team.id;
                teamDiv.dataset.teamItem = '';
                teamDiv.innerHTML = `
                                        <div class="p-y-1 p-x-1 br-50 bg-grey"></div>
                                                <h6 class="H6">${team.userName}</h6>
                                        <div class="role-container role-agent fw-semi text-0-5 text-sm">${team.role}</div>
                                    `;
                teamsList.appendChild(teamDiv);
            });


            const teamItems = document.querySelectorAll('[data-team-item]');
            teamItems.forEach(item => {
                item.addEventListener('click', () => {
                    teamItems.forEach(teamItem => {
                        teamItem.classList.remove('selected-agent');
                    });
                    item.classList.add('selected-agent');
                    const teamId = item.dataset.teamId;

                    const teamActive = Object.values(teams).find(team => team.id === teamId);

                    console.log("teamActive", teamActive);
                    console.log('Clicked team ID:', teamId);

                    tm1star = teamActive.ticketVolume.star_1;
                    tm2star = teamActive.ticketVolume.star_2;
                    tm3star = teamActive.ticketVolume.star_3;
                    tm4star = teamActive.ticketVolume.star_4;
                    tm5star = teamActive.ticketVolume.star_5;

                    aomClosed = teamActive.ticketStatus.closed;
                    aomOpen = teamActive.ticketStatus.open;
                    aomInProgress = teamActive.ticketStatus.inProgress;
                    aomResolved = teamActive.ticketStatus.resolved;

                    aomTechnical = teamActive.ticketCategory.technical;
                    aomBilling = teamActive.ticketCategory.billing;
                    aomGeneralInquiry = teamActive.ticketCategory.generalInquiry;
                    aomOthers = teamActive.ticketCategory.others;

                    updateCharts();
                });
            });
        }

        renderTeams(Object.values(teams));

        const searchInput = document.getElementById('team-search-input');
        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();
            const filteredTeams = Object.values(teams).filter(team =>
                team.userName.toLowerCase().includes(searchTerm)
            );
            renderTeams(filteredTeams);
        });


        let aomClosed = document.querySelector('[data-aom-closed]').textContent.trim()
        let aomOpen = document.querySelector('[data-aom-open]').textContent.trim()
        let aomInProgress = document.querySelector('[data-aom-inprogress]').textContent.trim()
        let aomResolved = document.querySelector('[data-aom-resolved]').textContent.trim()

        let aomTechnical = document.querySelector('[data-aom-technical]').textContent.trim()
        let aomBilling = document.querySelector('[data-aom-billing]').textContent.trim()
        let aomGeneralInquiry = document.querySelector('[data-aom-generalInquiry]').textContent.trim()
        let aomOthers = document.querySelector('[data-aom-others]').textContent.trim()

        let tm1star = document.querySelector('[data-tm-1star]').textContent.trim()
        let tm2star = document.querySelector('[data-tm-2star]').textContent.trim()
        let tm3star = document.querySelector('[data-tm-3star]').textContent.trim()
        let tm4star = document.querySelector('[data-tm-4star]').textContent.trim()
        let tm5star = document.querySelector('[data-tm-5star]').textContent.trim()

        const lineChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['1star', '2star', '3star', '4star', '5star'],
                datasets: [{
                    data: [tm1star, tm2star, tm3star, tm4star, tm5star],
                    label: "Ticket Volume",
                    borderWidth: 1,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const pieChartStatus = document.getElementById('pieChartStatus').getContext('2d');
        const statusChart = new Chart(pieChartStatus, {
            type: 'doughnut',
            data: {
                labels: ['Open', 'Resolved', 'In Progress', 'Closed'],
                datasets: [{
                    data: [aomOpen, aomResolved, aomInProgress, aomClosed], // Replace with your actual data
                    backgroundColor: ['#40A6D8', '#6DB971', '#E68F36', '#DA5D5B']
                }]
            }
        });

        const pieChartCategory = document.getElementById('pieChartCategory').getContext('2d');
        const categoryChart = new Chart(pieChartCategory, {
            type: 'doughnut',
            data: {
                labels: ['Technical', 'Billing', 'General Inquiry', 'Others'],
                datasets: [{
                    data: [aomTechnical, aomBilling, aomGeneralInquiry, aomOthers], // Replace with your actual data
                    backgroundColor: ['#40A6D8', '#E68F36', '#6DB971', '#DA5D5B']
                }]
            }
        });

        const pieChartPriority = document.getElementById('pieChartPriority').getContext('2d');
        const priorityChart = new Chart(pieChartPriority, {
            type: 'doughnut',
            data: {
                labels: ['Low', 'High', 'Medium', 'Urgent'],
                datasets: [{
                    data: [aomLow, aomMedium, aomHigh, aomUrgent], // Replace with your actual data
                    backgroundColor: ['#40A6D8', '#6DB971', '#E68F36', '#DA5D5B']
                }]
            }
        });

        function updateCharts() {
            lineChart.data.datasets[0].data = [tm1star, tm2star, tm3star, tm4star, tm5star];
            lineChart.update();

            categoryChart.data.datasets[0].data = [aomTechnical, aomBilling, aomGeneralInquiry, aomOthers]
            categoryChart.update();

            statusChart.data.datasets[0].data = [aomOpen, aomResolved, aomInProgress, aomClosed]
            statusChart.update();
        }
    </script>

 
}