@model ASI.Basecode.Services.ServiceModels.OverAllTicketCountViewModel

@{
    ViewData["Title"] = "Tickets";
    Layout = "_Layout";
}

@section styles {
    <link rel="stylesheet" href="~/css/functionalities.css" />
    <link rel="stylesheet" href="~/css/Admin.css" />
}

@Html.Partial("Admin_Header")
<div class="main">
    @Html.Partial("Admin_Sidebar")
    <div class="admin-body py-3 relative bg-grey">
        @* Status *@
        <p class="hidden" data-aom-open>@Model.TicketCountsByStatus["Open"]</p>
        <p class="hidden" data-aom-resolved>@Model.TicketCountsByStatus["Resolved"]</p>
        <p class="hidden" data-aom-inprogress>@Model.TicketCountsByStatus["In Progress"]</p>
        <p class="hidden" data-aom-closed>@Model.TicketCountsByStatus["Closed"]</p>
        @* Category *@
        <p class="hidden" data-aom-technical>@Model.TicketCountsByCategory["Technical"]</p>
        <p class="hidden" data-aom-billing>@Model.TicketCountsByCategory["Billing"]</p>
        <p class="hidden" data-aom-generalInquiry>@Model.TicketCountsByCategory["General Questions"]</p>
        <p class="hidden" data-aom-accountManagement>@Model.TicketCountsByCategory["Account Management"]</p>
        <p class="hidden" data-aom-customerSupport>@Model.TicketCountsByCategory["Customer Support"]</p>
        <p class="hidden" data-aom-others>@Model.TicketCountsByCategory["Others"]</p>
        @* Priority *@
        <p class="hidden" data-aom-low>@Model.TicketCountsByPriority["Low"]</p>
        <p class="hidden" data-aom-medium>@Model.TicketCountsByPriority["Mid"]</p>
        <p class="hidden" data-aom-high>@Model.TicketCountsByPriority["High"]</p>
        <h2>Analytics</h2>
        <div class="view-user-nav">
            <div class="agent-nav pt-4">
                <div class="flex-Row gap-4 pl-2 mb-4">
                    <a asp-action="AnalyticsOverallMetrics" data-td-none asp-controller="Admin" class="nav-item  active-admin-nav" data-ticketsall-nav-item data-status="unresolved">Overall Metrics</a>
                    <a asp-action="AnalyticsTeamMetric" data-td-none asp-controller="Admin" class="nav-item " data-ticketsall-nav-item data-status="resolved">Team Metric</a>
                    <a asp-action="AgentMetric" data-td-none asp-controller="Admin" class="nav-item" data-ticketsall-nav-item data-status="resolved">Agent Metrics</a>
                </div>
            </div>
           
        </div>
        <div class="admin-grid-3 | flex-Row gap-4 justify-content-center align-center">
            
            <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                <p>Ticket by Status this Week</p>
                <canvas id="pieChartStatus"></canvas>
            </div>
            <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                <p>Ticket by Category this Week</p>
                <canvas id="pieChartCategory"></canvas>
            </div>
            <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                <p>Ticket by Priority this Week</p>
                <canvas id="pieChartPriority"></canvas>
            </div>
        </div>
        <div class="admin-grid-2-overallmetrics">
            
            <div class="bg-White  p-x-0-5 p-y-0-5 br-1-5">
                <canvas id="LineTicketVolumeMetric"></canvas>
            </div>
            <div class="bg-White p-x-0-5 p-y-0-5 br-1-5 h-100 flex flex-col gap-1">
                <p>User Activity</p>
                @foreach (var activity in Model.RecentUserActivities)
                {
                    <div class="flex-Row gap-1 align-items-center">
                        <div class="p-y-2 p-x-2 br-50 bg-grey"></div>
                        <div class="flex flex-col gap-0-5">
                            <p>@activity.ModifiedByName @activity.OperationName "@activity.Title"</p>
                            <p class="text-sm color-inactive">@activity.Date</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section scripts {

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('LineTicketVolumeMetric').getContext('2d');

        const aomClosed = document.querySelector('[data-aom-closed]').textContent.trim()
        const aomOpen = document.querySelector('[data-aom-open]').textContent.trim()
        const aomInProgress = document.querySelector('[data-aom-inprogress]').textContent.trim()
        const aomResolved = document.querySelector('[data-aom-resolved]').textContent.trim()

        const aomTechnical = document.querySelector('[data-aom-technical]').textContent.trim()
        const aomBilling = document.querySelector('[data-aom-billing]').textContent.trim()
        const aomGeneralInquiry = document.querySelector('[data-aom-generalInquiry]').textContent.trim()
        const aomAccountManagement = document.querySelector('[data-aom-accountManagement]').textContent.trim()
        const aomCustomerSupport = document.querySelector('[data-aom-customerSupport]').textContent.trim()
        const aomOthers = document.querySelector('[data-aom-others]').textContent.trim()

        const aomLow = document.querySelector('[data-aom-low]').textContent.trim()
        const aomMedium = document.querySelector('[data-aom-medium]').textContent.trim()
        const aomHigh = document.querySelector('[data-aom-high]').textContent.trim()
    
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TicketCountsByDay.Keys)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.TicketCountsByDay.Values)),
                    label: "Ticket Volume",
                    borderWidth: 1,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const pieChartStatus = document.getElementById('pieChartStatus').getContext('2d');
        new Chart(pieChartStatus, {
            type: 'doughnut',
            data: {
                labels: ['Open', 'Resolved', 'In Progress', 'Closed'],
                datasets: [{
                    data: [aomOpen, aomResolved, aomInProgress, aomClosed], // Replace with your actual data
                    backgroundColor: ['#40A6D8', '#6DB971', '#E68F36', '#DA5D5B']
                }]
            }
        });

        const pieChartCategory = document.getElementById('pieChartCategory').getContext('2d');
        new Chart(pieChartCategory, {
            type: 'doughnut',
            data: {
                labels: ['Technical', 'Billing', 'General Questions', 'Account Management', 'Customer Support', 'Others'],
                datasets: [{
                    data: [aomTechnical, aomBilling, aomGeneralInquiry, aomAccountManagement, aomCustomerSupport, aomOthers], // Replace with your actual data
                    backgroundColor: ['#40A6D8', '#E68F36', '#6DB971', '#C34886', '#F9C224', '#DA5D5B']
                }]
            }
        });

        const pieChartPriority = document.getElementById('pieChartPriority').getContext('2d');
        new Chart(pieChartPriority, {
            type: 'doughnut',
            data: {
                labels: ['Low', 'Medium', 'High'],
                datasets: [{
                    data: [aomLow, aomMedium, aomHigh], // Replace with your actual data
                    backgroundColor: ['#6DB971', '#E68F36', '#DA5D5B']
                }]
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            const swiper = new Swiper('.swiper', {
                // Optional parameters
                loop: true,
                grabCursor: true,
                spaceBetween: true,
                // If we need pagination
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                    dynamicBullets: true
                },
                // Navigation arrows
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },

                breakpoints: {
                    0: {
                        slidesPerView: 1
                    },
                    620: {
                        slidesPerView: 2
                    },
                    1024: {
                        slidesPerView: 3
                    }
                }
            });
        });
    </script>
}