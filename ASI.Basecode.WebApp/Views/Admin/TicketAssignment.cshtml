@model ASI.Basecode.Services.ServiceModels.AgentAssignmentViewModel

@{
    ViewData["Title"] = "Tickets";
    Layout = "_Layout"; 
}
@section styles {
    <link rel="stylesheet" href="~/css/functionalities.css" />
    <link rel="stylesheet" href="~/css/Admin.css" />
}

@Html.Partial("Admin_Header")
<div class="main">
    @Html.Partial("Admin_Sidebar") 
    <div class="admin-body p-y-3 relative bg-grey">
        <div class="flex flex-col gap-1">
            <div class="flex-Row justify-content-between align-items-center gap-1 ml-2 mb-2">
                <a asp-controller="Admin" asp-action="Tickets" asp-route-id=""><i class="fa-solid fa-arrow-left" style="color: black; transform: scale(1.5)"></i></a>
            </div>
            <div class="bg-white admin-ticket agents | cursor-pointer ctr-shadow p-y-1 p-x-1 flex flex-col gap-1">
                <div class="flex-Row justify-content-between">
                    <p class="text-1-5 fw-semi">@Model.Title</p>
                    <p class="mt-1 " style="font-size: 12px;">@Model.CreatedAt</p>
                </div>
                @* <div class="flex-Row gap-1">
                    <div class="role-container role-agent fw-semi text-0-5">Agent</div>
                    <div class="role-container role-agent fw-semi text-0-5">Agent</div>
                </div> *@
            </div>
            <br></br>
            <div class="flex-Row justify-content-between align-items-center">
                <h2>Agents</h2>
                <button class="registerBtn mbtn-primary align-self-start" data-admin-assign-btn>Assign</button>
            </div>
        
            <div class=" flex flex-col gap-0-5 br-1-5 h-29" data-admin-tickets-container>
                @if (Model.Agents.Count == 0)
				{
					<div class="flex-Row justify-content-center align-items-center h-100">
						<p class="text-1-5">
                        No Agents Available
                        </p>
                    </div>
                }
                else
                {
                    @foreach (var item in Model.Agents)
                    {

                        <div class="agents cursor-pointer br-1-5 flex-Row p-x-0-5 p-y-0-5 justify-content-between align-items-center" data-agent-assignee>
                            <div class="flex-Row gap-1 align-items-center">
                                <div class="p-y-1 p-x-1 br-50 bg-grey"></div>
                                <input type="hidden" id="agentName" value="@item.Name" />
                                <input type="hidden" id="agentId" value="@item.UserId" />
                                <h6>@item.Name</h6>
                                @if (item.TeamName != null)
                                {
                                    <div class="role-container role-agent fw-semi text-0-5 text-sm">@item.TeamName</div>
                                }
                            </div>
                            <div class="flex-Row gap-1">
                                <p class="text-sm">Number of Tickets: @Model.AssignedTicketCounts.FirstOrDefault(x => x.Agent.UserId == item.UserId)?.TotalTicketCount</p>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="hidden bg-modal delete-modal-container" data-admin-assign-modal-container>
            <div class="delete-modal flex flex-col gap-1 justify-content-center align-items-center" data-admin-assign-modal>
                <i class="text-md fa-regular fa-circle-xmark hover-pointer align-self-end" data-admin-assign-close-btn></i>
                <div class="flex-between flex-col align-items-center justify-content-center">
                    <p class="text-1-5">Do you really want to assign<span class="font-weight-bold">@Model.Title</span><br /> to Agent: <span class="font-weight-bold" id="agentNameDisplay"></span>?</p>
                </div>
                <div class="flex-Row w-100 justify-content-end gap-2">
                    <button class=" mbtn-primary color-white bg-red align-center justify-content-center border-0 p-y-0-5 p-x-1 br-1-5" data-admin-assign-save-btn>Assign</button>
                    <button class="color-white bg-btn-accent align-center justify-content-center border-0 p-y-0-5 p-x-1 br-1-5" data-admin-assign-cancel-btn>Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const AssigneeAgents = document.querySelectorAll("[data-agent-assignee]")
        const assignModalContainer = document.querySelector("[data-admin-assign-modal-container]")

        const adminAsgnBtn = document.querySelector("[data-admin-assign-btn]")
        const adminAsgnForm = document.querySelector("[data-admin-assign-modal]")

        const adminAsgnCloseBtn = document.querySelector("[data-admin-assign-close-btn]")
        const adminAsgnCancelBtn = document.querySelector("[data-admin-assign-cancel-btn]")
        const adminAsgnSaveBtn = document.querySelector("[data-admin-assign-save-btn]")

        adminAsgnBtn.addEventListener("click", () => {

            const selectedAgent = document.querySelector(".selected-agent");

            if (!selectedAgent) {
                alert("Please select an agent to assign the ticket to.");
                return;
            }
            
            const agentName = selectedAgent.querySelector("h6").textContent.trim();
            document.querySelector("#agentNameDisplay").textContent = agentName;
            assignModalContainer.classList.remove("hidden");
            adminAsgnForm.classList.remove("hidden");
        });

        adminAsgnCancelBtn.addEventListener("click", () => {
            assignModalContainer.classList.add("hidden")
            adminAsgnForm.classList.add("hidden")
        })

        adminAsgnCloseBtn.addEventListener("click", () => {
            assignModalContainer.classList.add("hidden")
            adminAsgnForm.classList.add("hidden")
        })

        adminAsgnSaveBtn.addEventListener("click", () => {
            const selectedAgent = document.querySelector(".selected-agent");


            const agentId = selectedAgent.querySelector("#agentId").value;
            const ticketId = '@Model.TicketId';

            console.log(agentId);
            console.log(ticketId);

            // AJAX POST request with absolute path
            fetch('/Admin/Tickets/Assignment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ TicketId: ticketId, SelectedAgentId: agentId }),
            }).then(response => {
                if (response.ok) {
                    console.log('Ticket assigned successfully.');
                    // Optionally handle success actions like updating UI
                    assignModalContainer.classList.add("hidden");
                    adminAsgnForm.classList.add("hidden");

                    window.location.href = '/Admin/Tickets/' + ticketId;
                } else {
					console.error('Failed to assign ticket.');
					// Handle error cases
                }
            }).catch(error => {
                console.error('Error assigning ticket:', error);
            });

            assignModalContainer.classList.add("hidden");
            adminAsgnForm.classList.add("hidden");
        });

        AssigneeAgents.forEach(agent => {
            agent.addEventListener("click", () => {
                console.log("event", agent)
                if (agent.classList.contains("selected-agent")) {
                    agent.classList.remove("selected-agent");
                    return;
                }
                AssigneeAgents.forEach(a => a.classList.remove("selected-agent"));
                agent.classList.add("selected-agent");
            })
        })

        const agentName = document.querySelector("#agentName").value;
        document.querySelector("#agentNameDisplay").textContent = agentName;

        const agentId = document.querySelector("#agentId").value;
    });
</script>