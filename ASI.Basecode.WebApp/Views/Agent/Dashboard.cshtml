@model ASI.Basecode.Services.ServiceModels.AgentDashboardViewModel

@{
    ViewData["Title"] = "Tickets";
    Layout = "_Layout";
}

@section styles {
    <link rel="stylesheet" href="~/css/functionalities.css" />
    <link rel="stylesheet" href="~/css/Admin.css" />
    <link rel="stylesheet" href="~/css/user_tickets.css" />
}

@Html.Partial("Agent_Header")
<div class="main">
    @Html.Partial("Agent_Sidebar")
    <div class="admin-body p-y-3 relative bg-grey flex flex-col gap-1">
        <div class="flex-Row justify-content-between">
            <div id="buttonContainer">
                <a asp-action="Dashboard" asp-route-status="All" class="btn btn-primary @(Model.CurrentStatus == "All" ? "activeButton" : "inactiveButton")">All</a>
                <a asp-action="Dashboard" asp-route-status="Unresolved" class="btn btn-primary @(Model.CurrentStatus == "Unresolved" ? "activeButton" : "inactiveButton")">Unresolved</a>
                <a asp-action="Dashboard" asp-route-status="Resolved" class="btn btn-primary @(Model.CurrentStatus == "Resolved" ? "activeButton" : "inactiveButton")">Resolved</a>
            </div>

            <div class="flex-Row gap-2 justify-content-center align-center mb-5 mt-3">
                <input name="searchString" id="search-input" type="text" class="form-control filter_tickets remove_default" placeholder="Search Tickets" aria-label="Search" aria-describedby="button-search">
            </div>

            <select class="form-select nav-select" id="floatingSelect" aria-label="Floating label select example">
                <option selected>Date</option>
                <option value="1">Category</option>
            </select>
        </div>

        <div id="card_content">
            @if(Model.Tickets.Count() > 0)
            {
                @foreach (var item in Model.Tickets)
                {
                    <div class="ticket-container">
                        <a data-bs-toggle="modal" data-bs-target="#viewTicket" class="ticket-link" data-ticket-id="@item.TicketId">
                            <div class="top-container">
                                @*  <img class="image" src="@item.Image" alt="image"> *@
                                <div class="nameDateContainer">

                                    <h5 class="name">@item.CreatorName</h5>
                                    <p class="date">@item.RelativeTime</p>
                                </div>
                            </div>
                            <h2 class="question">@item.Title</h2>
                            <p class="details">@item.Description</p>
                        </a>
                        <div class="btn-group option">
                            @if (item.Status == "In Progress")
                            {
                                <button class="btn icon-button" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bx bx-dots-vertical-rounded bx-sm icon-ticket" style="color: #808080;"></i>
                                </button>
                                <ul class="dropdown-menu menu">
                                    <li>
                                        <a class="dropdown-item item" href="#" data-bs-toggle="modal" data-bs-target="#resolveTicket" data-ticket-id="@item.TicketId">
                                            <i class="bx bxs-check-circle bx-xs bx-fw" style="color: #808080;"></i>
                                            Mark as Resolved
                                        </a>
                                    </li>
                                </ul>
                            }
                        </div>
                    </div>
                }
            } else
            {
                <h1 class="d-flex justify-content-center align-items-center h-75">No tickets found</h1>
            }
        </div>

        <div class="modal fade" id="viewTicket" tabindex="-1" aria-labelledby="viewTicket" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="ticket-modal1">
                        <div class="top_modal d-flex justify-content-between align-items-center mb-3">
                            <h3>View Ticket</h3>
                            <button type="button" class="btn closebtn1" data-bs-dismiss="modal"><i class='bx bx-x bx-sm icon' style="color: #45474B; cursor: pointer;"></i></button>
                        </div>

                        <div class="top-container">
                            <img class="image" src="/img/profile-logo.png" alt="image">
                            <div class="nameDateContainer">
                                <h5 class="name" id="ViewName">Name</h5>
                                <p class="date" id="ViewDate">Date</p>
                            </div>
                        </div>
                        <h2 class="question" id="ViewTitle">Title</h2>
                        <p class="details" id="ViewDetails">Details</p>
                    </div>

                    <div class="gallery" id="ViewGallery"></div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="resolveTicket" tabindex="-1" aria-labelledby="resolveTicket" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content p-3">
                    <div class="modal-header">
                        <h5 class="modal-title" id="ticketActionModalLabel">Resolve Ticket</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form asp-controller="Agent" asp-action="ResolveTicket" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="modal-body">
                            <input type="hidden" asp-for="TicketMessage.TicketId" id="resolveTicketId" />
                            <div class="form-floating mb-3">
                                <textarea asp-for="TicketMessage.Message" class="form-control" placeholder="Description" id="floatingTextarea2" style="height: 100px"></textarea>
                                <span asp-validation-for="TicketMessage.Message" class="text-danger"></span>
                                <label for="floatingTextarea2">Message</label>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-danger">Submit</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {

        const viewTicketModal = new bootstrap.Modal(document.getElementById('viewTicket'));
        const resolveTicketModal = new bootstrap.Modal(document.getElementById('resolveTicket'));

        document.querySelectorAll('[data-bs-toggle="modal"]').forEach(element => {
            element.addEventListener('click', function () {
                const target = this.getAttribute('data-bs-target');

                if (target == '#viewTicket') {
                    var ticketId = this.getAttribute('data-ticket-id');

                    fetch(`/Agent/Tickets/${ticketId}`)
                        .then(response => response.json())
                        .then(data => {

                            document.querySelector('#ViewName').textContent = data.user;
                            document.querySelector('#ViewDate').textContent = data.dateCreated;
                            document.querySelector('#ViewTitle').textContent = data.title;
                            document.querySelector('#ViewDetails').textContent = data.description;

                            const gallery = document.querySelector('#ViewGallery');
                            gallery.innerHTML = '';

                            data.files.forEach(image => {
                                const anchor = document.createElement('a');
                                anchor.href = image;
                                anchor.setAttribute('data-lightbox', 'ticket-gallery');
                                anchor.setAttribute('data-title', data.title);

                                const img = document.createElement('img');
                                img.src = image;
                                img.alt = data.title
                                img.classList.add('gallery-thumbnail');

                                anchor.appendChild(img);
                                gallery.appendChild(anchor);
                            });

                            viewTicketModal.show();
                        })
                        .catch(error => console.error('Error fetching ticket data:', error));
                } else if (target == '#resolveTicket') {
                    var ticketId = this.getAttribute('data-ticket-id');
                    document.getElementById('resolveTicketId').value = ticketId;
                    resolveTicketModal.show();
                }
            });
        });

        const modals = document.querySelectorAll('.modal');

        modals.forEach(modal => {
            const closeButton = modal.querySelector('[data-bs-dismiss="modal"]');

            if (closeButton) {
                closeButton.addEventListener('click', function () {
                    const modalInstance = bootstrap.Modal.getInstance(modal);

                    if (modalInstance) {
                        modalInstance.hide();
                        const backdrop = document.querySelector('.modal-backdrop');
                        if (backdrop) {
                            backdrop.remove();
                        }
                    }
                });
            }
        });

        document.querySelectorAll('input[name="Rating"]').forEach((elem) => {
            elem.addEventListener("change", function () {
                document.getElementById("Rating").value = this.value;
            });
        });

        document.getElementById('search-input').addEventListener('keypress', function (event) {
            if (event.keyCode === 13) {
                event.preventDefault(); // Prevent form submission

                var searchTerm = this.value;
                var status = '@Model.CurrentStatus';
                var url = '@Url.Action("Dashboard")';

                // Construct the URL with the appropriate parameters
                if (status !== 'All') {
                    url += '?status=' + encodeURIComponent(status);
                }

                if (searchTerm) {
                    url += (url.indexOf('?') === -1 ? '?' : '&') + 'searchTerm=' + encodeURIComponent(searchTerm);
                }

                location.replace(url);
            }
        });
    });
</script>