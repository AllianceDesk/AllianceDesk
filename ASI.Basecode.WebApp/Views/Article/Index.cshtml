@model ASI.Basecode.Services.ServiceModels.ArticleViewModel

@section styles {
    <link rel="stylesheet" href="~/css/KnowledgeBase/Index.css" />
    <link rel="stylesheet" href="~/css/Common.css" />
}

@{
    ViewData["Title"] = "Knowledge Base";
    var categoryItem = new Dictionary<string, string> {
        {"Technical", "category-technical"},
        {"Billing", "category-billing"},
        {"General Questions", "category-gen-question"},
        {"Account Management", "category-act-management"},
        {"Customer Support", "category-customer-support"},
        {"Others", "category-others"}
    };

    var priorityItem = new Dictionary<string, string> {
        {"Mid", "priority-medium"},
        {"High", "priority-high"},
        {"Low", "priority-low"},
    };

    var statusItem = new Dictionary<string, string> {
        {"Open", "status-open"},
        {"Closed", "status-closed"},
        {"Resolved", "status-resolved"},
        {"In Progress", "status-inprogress"},

    };

    string GetPriorityClass(string priority) => priorityItem.ContainsKey(priority) ? priorityItem[priority] : string.Empty;
    string GetCategoryClass(string category) => categoryItem.ContainsKey(category) ? categoryItem[category] : string.Empty;
    string GetStatusClass(string status) => statusItem.ContainsKey(status) ? statusItem[status] : string.Empty;

}

@if (ViewBag.RoleId == 1) {
    @Html.Partial("Admin_Header")
}
else if (ViewBag.RoleId == 2)
{
    @Html.Partial("Agent_Header")
}

<div @(ViewBag.RoleId == 3 ? "id=container" : "class=main")>
    @if (ViewBag.RoleId == 3)
    {
        <header class="px-5">
            <div class="hidden add_button">

                <div class="btn-group">
                    <button type="button" class="btn btn-danger me-1" data-bs-toggle="modal" data-bs-target="#create" id="addArticleBtn">Add Article</button>
                </div>

            </div>
            <div>
                <img src="~/img/alliancedesk-logo.png" style="width: 185px;" alt="logo">
            </div>

            <div class="">

                <i class='bx bx-bell bx-sm bx-fw pt-1 mr-1 bell_icon' style="cursor: pointer; transform: scale(1.1);"></i>
                <div class="btn-group">
                    <img src="~/img/profile-logo.png" class="dpicn" data-bs-toggle="dropdown" aria-expanded="false" alt="Profile">
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#"><i class='bx bx-user'></i> Profile</a></li>
                        <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#settings" style="cursor: pointer;"><i class='bx bx-cog'></i> Settings</a></li>
                        <li><a class="dropdown-item" asp-action="SignOutUser" asp-controller="Account"><i class='bx bx-log-out'></i> Logout</a></li>
                    </ul>
                </div>

            </div>
        </header>
        <div id="sidebar" class="px-4">
            <a asp-controller="User" asp-action="Tickets" method="get" type="button" class="btn mt-3 w-100 d-flex justify-content-start align-items-center admin-sb-inactive-button remove_default" style="height: 3rem;">
                <i class='bx bx-book' style=' transform: scale(1.3)'></i>
                <span class="ml-2">My Tickets</span>
            </a>

            <a asp-controller="Article" asp-action="Index" method="get" type="button" class="btn btn-danger mt-3 w-100 d-flex justify-content-start align-items-center admin-sb-active-button remove_default" style="height: 3rem;">
                <i class='bx bx-news' style=' transform: scale(1.3)'></i>
                <span class="ml-2">Knowledge Base</span>
            </a>
        </div>

        <nav style="padding: 0rem 4rem 1rem 4rem;">

            <div class="nav_one mt-3">

                <h2>Knowledge Base</h2>

                <div class="hidden add_button">

                    <div class="btn-group">
                        <button type="button" class="btn btn-danger me-1" data-bs-toggle="modal" data-bs-target="#create" id="addArticleBtn">Add Article</button>
                    </div>

                </div>

            </div>

            <div class="nav_two mt-1">
                <div class="d-flex" style="gap:2em;">
                    <a class="active_link" asp-controller="Article" asp-action="Index" style="text-decoration: none;">Articles</a>
                    <a class="inactive_link d-flex" asp-controller="Article" asp-action="MyFavorites" style="text-decoration: none; ">
                        My Favorites
                        @if (ViewBag.FavoriteCount != null && ViewBag.FavoriteCount > 0)
                        {
                            <span class="article_badge ml-2">@ViewBag.FavoriteCount</span>
                        }
                    </a>
                </div>

                @* <div class="d-flex gap-3">

            <div class="d-flex position-relative" style="width: 20rem; margin-top: 0.25rem;">
            <i class='bx bx-search-alt search-icon' style='color:#1d1c1c'></i>
            <input class="form-control rounded-5 border_color" id="search-input" type="search" placeholder="Search" aria-label="Search" value="@Model.CurrentSearchTerm" style="width: 100%; height: 2.6rem; padding-left: 2.5rem;">
            </div>


            <select class="form-select border_color" style="height: 2.5rem; width: 10.1rem; margin-top: 0.8rem; cursor: pointer; border: none;" aria-label="Small select example">
            <option selected>Date</option>
            <option value="1">Category</option>
            </select>

            </div> *@

                <div class="filter_button mt-2">

                    <form asp-action="Index" method="get" asp-controller="Article" id="searchForm" class="d-flex">
                        <div class="input-group mr-3">
                            <button class="btn btn-outline-secondary" type="submit" id="button-search" style="background-color: whitesmoke; border: 1px solid #ccc; outline: none; box-shadow: none;"><i class='bx bx-search bx-xs bx-fw' style="color: #45474B; cursor: pointer;"></i></button>
                            <input name="searchString" id="searchInput" type="text" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="button-search" style="background-color: whitesmoke; border: 1px solid #ccc; outline: none; box-shadow: none;" value="@ViewBag.SearchString">
                        </div>

                        @Html.DropDownList("category", new Microsoft.AspNetCore.Mvc.Rendering.SelectList(new List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>
                    {
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Default", Value = "default" },
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Technical", Value = "Technical" },
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Billing", Value = "Billing" },
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "General Questions", Value = "General Questions" },
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Account Management", Value = "Account Management" },
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Customer Support", Value = "Customer Support" },
                    new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Others", Value = "Others" }
                    }, "Value", "Text", ViewBag.CategoryString), new { @class = "form-select", @aria_label = "Default select example", @style = "width: 16em; outline: none; box-shadow: none; border: 1px solid #ccc; background-color: whitesmoke;", @onchange = "document.getElementById('searchForm').submit();" })
                    </form>
                </div>
            </div>
        </nav>

        <main class="flex flex-col gap-1 pt-4">
            @foreach (var item in Model.Articles)
            {
                <a href="#" class="link_card" style="text-decoration: none; color: inherit;">
                    <div class="article_card" data-bs-toggle="modal" data-bs-target="#detail" data-article-detail-btn data-article-id="@item.ArticleId">
                        <div class="article_top mb-4">
                            <h5>@Html.DisplayFor(modelItem => item.Title)</h5>
                            <p>@Html.DisplayFor(modelItem => item.DateUpdated)</p>
                        </div>

                        <p class="mb-3" style="font-size: 14px;">@Html.DisplayFor(modelItem => item.Body)</p>
                        <h6 class="role-container @GetCategoryClass(item.CategoryNavigation) " style="align-self: start; text-align: center;">@Html.DisplayFor(modelItem => item.CategoryNavigation)</h6>

                    </div>
                </a>
            }
        </main>
    }
    else if (ViewBag.RoleId == 1)
    {
        @Html.Partial("Admin_Sidebar")
        <div class="admin-body py-3 relative bg-grey flex flex-col gap-1">
            <div class="">

                <div class="nav_one mb-3">

                    <h3>Knowledge Base</h3>

                    <div class="add_button">

                        <div class="btn-group">
                            <button type="button" class="btn btn-danger me-1" data-bs-toggle="modal" data-bs-target="#create" id="addArticleBtn">Add Article</button>
                        </div>

                    </div>

                </div>

                <div class="nav_two">
                    <div class="d-flex" style="gap:2em;">
                        <a class="active_link" asp-controller="Article" asp-action="Index" style="text-decoration: none;">Articles</a>
                        <a class="inactive_link d-flex" asp-controller="Article" asp-action="MyFavorites" style="text-decoration: none; ">
                            My Favorites
                            @if (ViewBag.FavoriteCount != null && ViewBag.FavoriteCount > 0)
                            {
                                <span class="article_badge ml-2">@ViewBag.FavoriteCount</span>
                            }
                        </a>
                    </div>

                    <div class="filter_button">

                        <form asp-action="Index" method="get" asp-controller="Article" id="searchForm" class="d-flex">
                            <div class="input-group mr-3">
                                <button class="btn btn-outline-secondary" type="submit" id="button-search" style="background-color: whitesmoke; border: 1px solid #ccc; outline: none; box-shadow: none;"><i class='bx bx-search bx-xs bx-fw' style="color: #45474B; cursor: pointer;"></i></button>
                                <input name="searchString" id="searchInput" type="text" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="button-search" style="background-color: whitesmoke; border: 1px solid #ccc; outline: none; box-shadow: none;" value="@ViewBag.SearchString">
                            </div>

                            @Html.DropDownList("category", new Microsoft.AspNetCore.Mvc.Rendering.SelectList(new List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>
                        {
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Default", Value = "default" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Technical", Value = "Technical" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Billing", Value = "Billing" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "General Questions", Value = "General Questions" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Account Management", Value = "Account Management" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Customer Support", Value = "Customer Support" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Others", Value = "Others" }
                        }, "Value", "Text", ViewBag.CategoryString), new { @class = "form-select", @aria_label = "Default select example", @style = "width: 16em; outline: none; box-shadow: none; border: 1px solid #ccc; background-color: whitesmoke;", @onchange = "document.getElementById('searchForm').submit();" })
                        </form>
                    </div>
                </div>
            </div>

            <main class="flex flex-col gap-1 mt-4">
                @foreach (var item in Model.Articles)
                {
                    <a href="#" class="link_card" style="text-decoration: none; color: inherit;">
                        <div class="article_card" data-bs-toggle="modal" data-bs-target="#detail" data-article-detail-btn data-article-id="@item.ArticleId">
                            <div class="article_top mb-4">
                                <h5>@Html.DisplayFor(modelItem => item.Title)</h5>
                                <p>@Html.DisplayFor(modelItem => item.DateUpdated)</p>
                            </div>

                            <p class="mb-3" style="font-size: 14px;">@Html.DisplayFor(modelItem => item.Body)</p>
                            <h6 class="role-container @GetCategoryClass(item.CategoryNavigation) " style="align-self: start; text-align: center;">@Html.DisplayFor(modelItem => item.CategoryNavigation)</h6>

                        </div>
                    </a>
                }
            </main>
        </div>
    } else
    {
        @Html.Partial("Agent_Sidebar")
        <div class="admin-body py-3 relative bg-grey flex flex-col gap-1">
            <div>
                <div class="nav_one mb-3">

                    <h3>Knowledge Base</h3>

                    <div class="add_button">

                        <div class="btn-group">
                            <button type="button" class="btn btn-danger me-1" data-bs-toggle="modal" data-bs-target="#create" id="addArticleBtn">Add Article</button>
                        </div>

                    </div>

                </div>

                <div class="nav_two">
                    <div class="d-flex" style="gap:2em;">
                        <a class="active_link" asp-controller="Article" asp-action="Index" style="text-decoration: none;">Articles</a>
                        <a class="inactive_link d-flex" asp-controller="Article" asp-action="MyFavorites" style="text-decoration: none; ">
                            My Favorites
                            @if (ViewBag.FavoriteCount != null && ViewBag.FavoriteCount > 0)
                            {
                                <span class="article_badge ml-2">@ViewBag.FavoriteCount</span>
                            }
                        </a>
                    </div>

                    <div class="filter_button">

                        <form asp-action="Index" method="get" asp-controller="Article" id="searchForm" class="d-flex">
                            <div class="input-group mr-3">
                                <button class="btn btn-outline-secondary" type="submit" id="button-search" style="background-color: whitesmoke; border: 1px solid #ccc; outline: none; box-shadow: none;"><i class='bx bx-search bx-xs bx-fw' style="color: #45474B; cursor: pointer;"></i></button>
                                <input name="searchString" id="searchInput" type="text" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="button-search" style="background-color: whitesmoke; border: 1px solid #ccc; outline: none; box-shadow: none;" value="@ViewBag.SearchString">
                            </div>

                            @Html.DropDownList("category", new Microsoft.AspNetCore.Mvc.Rendering.SelectList(new List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>
                        {
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Default", Value = "default" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Technical", Value = "Technical" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Billing", Value = "Billing" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "General Questions", Value = "General Questions" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Account Management", Value = "Account Management" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Customer Support", Value = "Customer Support" },
                        new Microsoft.AspNetCore.Mvc.Rendering.SelectListItem { Text = "Others", Value = "Others" }
                        }, "Value", "Text", ViewBag.CategoryString), new { @class = "form-select", @aria_label = "Default select example", @style = "width: 16em; outline: none; box-shadow: none; border: 1px solid #ccc; background-color: whitesmoke;", @onchange = "document.getElementById('searchForm').submit();" })
                        </form>
                    </div>
                </div>
            </div>

            <main class="flex flex-col gap-1 mt-4">
                @foreach (var item in Model.Articles)
                {
                    <a href="#" class="link_card" style="text-decoration: none; color: inherit;">
                        <div class="article_card" data-bs-toggle="modal" data-bs-target="#detail" data-article-detail-btn data-article-id="@item.ArticleId">
                            <div class="article_top mb-4">
                                <h5>@Html.DisplayFor(modelItem => item.Title)</h5>
                                <p>@Html.DisplayFor(modelItem => item.DateUpdated)</p>
                            </div>

                            <p class="mb-3" style="font-size: 14px;">@Html.DisplayFor(modelItem => item.Body)</p>
                            <h6 class="role-container @GetCategoryClass(item.CategoryNavigation) " style="align-self: start; text-align: center;">@Html.DisplayFor(modelItem => item.CategoryNavigation)</h6>

                        </div>
                    </a>
                }
            </main>
        </div>
    }
</div>

<div class="modal fade" id="create" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- The content for Create Article Modal will be loaded here-->
        </div>
    </div>
</div>

<div class="modal fade" id="detail" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- The content for Article Detail Modal will be loaded here-->
        </div>
    </div>
</div>

<div class="modal fade" id="edit" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- The content for Article Edit Modal will be loaded here-->
        </div>
    </div>
</div>

<div class="modal fade" id="delete">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <!-- The content for Article Edit Modal will be loaded here-->
        </div>
    </div>
</div>

@Html.Partial("SettingsModal")


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var dpIcon = document.querySelector('.dpicn');
        var dropdownMenu = document.getElementById('dropdownMenu');

        /*dpIcon.addEventListener('click', function (event) {
            event.stopPropagation();

            if (dropdownMenu.style.display === 'block') {
                dropdownMenu.style.display = 'none';
            } else {
                dropdownMenu.style.display = 'block';
            }
        });*/

        var addArticleBtn = document.getElementById('addArticleBtn');
        
        addArticleBtn.addEventListener('click', function () {
            //Perform AJAX request here
            $.ajax({
                url: '/KnowledgeBase/Add-Article',
                type: 'GET',
                success: function (result) {
                    $('#create .modal-content').html(result);
                    $('#create').modal('show');
                    // Handle success response
                    // You can update the UI or process data here
                    console.log('Article Add successfully loaded!');
                },
                error: function (error) {
                    // Handle error response
                    console.error('Error adding article:', error);
                }
            });
        });

        $(document).on('click', '[data-article-detail-btn]', function () {
            var articleId = $(this).data('article-id');
            console.log("clicked");
            console.log(articleId);

            // Perform AJAX request to fetch article details
            $.ajax({
                url: '/KnowledgeBase/Article-Detail',
                type: 'GET',
                data: { articleId: articleId },
                success: function (result) {
                    $('#detail .modal-content').html(result);
                    $('#detail').modal('show');
                    console.log('Article details successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        });
       
        $(document).on('click', '[data-article-edit-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to fetch article details
            $.ajax({
                url: '/KnowledgeBase/Article-Edit',
                type: 'GET',
                data: { articleId: articleId },
                success: function (result) {
                    $('#edit .modal-content').html(result);
                    $('#edit').modal('show');
                    console.log('Article details successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        });

        $(document).on('click', '[data-article-delete-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to fetch article details
            $.ajax({
                url: '/KnowledgeBase/Article-Delete',
                type: 'GET',
                data: { articleId: articleId },
                success: function (result) {
                    $('#delete .modal-content').html(result);
                    $('#delete').modal('show');
                    console.log('Article details successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        });

        $(document).on('click', '[data-article-addFavorites-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to add to favorites
            $.ajax({
                url: '/KnowledgeBase/Article-AddFavorite',
                type: 'POST',
                data: { articleId: articleId },
                success: function (result) {
                    // Refresh the article detail modal
                    loadArticleDetails(articleId);
                },
                error: function (error) {
                    console.error('Error adding article to favorites:', error);
                }
            });
        });

        $(document).on('click', '[data-article-removeFavorites-btn]', function () {
            var articleId = $(this).data('article-id');

            // Perform AJAX request to remove from favorites
            $.ajax({
                url: '/KnowledgeBase/Article-DeleteFavorite',
                type: 'POST',
                data: { articleId: articleId },
                success: function (result) {
                    // Refresh the article detail modal
                    loadArticleDetails(articleId);
                },
                error: function (error) {
                    console.error('Error removing article from favorites:', error);
                }
            });
        });

        // Function to load article details
        function loadArticleDetails(articleId) {
            $.ajax({
                url: '/KnowledgeBase/Article-Detail',
                type: 'GET',
                data: { articleId: articleId },
                success: function (result) {
                    $('#detail .modal-content').html(result);
                    $('#detail').modal('show');
                    console.log('Article details successfully loaded!');
                },
                error: function (error) {
                    console.error('Error loading article details:', error);
                }
            });
        }
    });

</script>